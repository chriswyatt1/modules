nextflow_process {

    name "Test Process RATTLE_CLUSTERSUMMARY"
    script "../main.nf"
    process "RATTLE_CLUSTERSUMMARY"

    tag "modules"
    tag "modules_nfcore"
    tag "rattle"
    tag "rattle/clustersummary"
    tag "rattle/cluster"

    test("test-rattle-clustersummary") {

        setup {
            run("RATTLE_CLUSTER") {
                script "../../cluster/main.nf"
                process {
                    """
                    input[0] = [
                        [ id:'test', single_end:false ], // meta map
                        [ file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/nanopore/fastq/test.fastq.gz', checkIfExists: true) ]
                    ]
                    """
                }
            }
        }

        when {
            process {
                """
                input[0] = [
				    [ id:'test', single_end:false ], // meta map
                    [ file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/nanopore/fastq/test.fastq.gz', checkIfExists: true) ]
				]
                input[1] = RATTLE_CLUSTER.out.clusters
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("test-rattle-clustersummary-stub") {
        options '-stub'

        setup {
            run("RATTLE_CLUSTER") {
                script "../../cluster/main.nf"
                process {
                    """
                    input[0] = [
                        [ id:'test', single_end:false ], // meta map
                        [ file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/nanopore/fastq/test.fastq.gz', checkIfExists: true) ]
                    ]
                    """
                }
            }
        }
        
        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    [ file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/nanopore/fastq/test.fastq.gz', checkIfExists: true) ]
                ]
                input[1] = RATTLE_CLUSTER.out.clusters
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

}
